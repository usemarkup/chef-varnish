# THIS IS AN AUTO GENERATED FILE BY CHEF
# PLEASE SEE THE VARNISH COOKBOOK FOR CHANGES

vcl 4.1;
import std;

<% (@varnish['backends'] || []).each do |name, backend| %>
backend <%=name%> {
    .host = "<%=backend['host']%>";
    .port = "<%=backend['port']%>";
    .connect_timeout = 1s;
}
<% end %>

acl invalidators {
<% (@varnish['invalidators'] || []).each do |ip| %>
    "<%= ip %>";
<% end %>
}

<%=::File.read('/etc/varnish/subroutines/malicious.vcl')%>
<%=::File.read('/etc/varnish/subroutines/client_ban.vcl')%>
<%=::File.read('/etc/varnish/subroutines/shield.vcl')%>

sub vcl_recv {
<%=::File.read('/etc/varnish/subroutines/recv.vcl')%>
}

sub vcl_backend_response {
<%=::File.read('/etc/varnish/subroutines/backend_response.vcl')%>
}

sub vcl_backend_error {
<%=::File.read('/etc/varnish/subroutines/backend_error.vcl')%>
}

sub vcl_deliver {
<%=::File.read('/etc/varnish/subroutines/deliver.vcl')%>
}

sub vcl_hit {
    set req.http.X-TTL = obj.ttl;
    set req.http.X-Grace = obj.grace;

    if (obj.ttl >= 0s) {
        return (deliver);
    }

    if (obj.ttl + obj.grace > 0s) {
        # Serve 'grace'
        return (deliver);
    }

    // fetch & deliver once we get the result
    <% if (@varnish['version'].to_i >= 50) %>
        return (miss);
    <% else %>
        return (fetch);
    <% end %>
}

sub vcl_hash {
    if (req.http.HashCookie == "") {
        unset req.http.HashCookie;
    }
    if (req.http.HashCookie) {
        hash_data(req.http.HashCookie);
    }
}

sub vcl_hit {
    if (req.method == "PURGE") {
        return (synth(204, "Purged"));
    }
}

sub vcl_miss {
    if (req.method == "PURGE") {
        return (synth(204, "Purged (Not in cache)"));
    }
}
